// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(BullContext))]
    [Migration("20210215132438_SecondVersion")]
    partial class SecondVersion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Infrastructure.AutoRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<ulong>("RoleId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("ServerId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.ToTable("AutoRoles");
                });

            modelBuilder.Entity("Infrastructure.BullList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Symbol")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("BullLists");
                });

            modelBuilder.Entity("Infrastructure.DailyOHLC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("EMA20Daily")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("LowerBand")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MacdHistogram")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MacdLine")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MiddleBand")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Obv")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("RSI12Daily")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("SMA180Daily")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("SMA9Daily")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("SignalLine")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Symbol")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UnqCode")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("UpperBand")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("DailyOHLCs");
                });

            modelBuilder.Entity("Infrastructure.Rank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<ulong>("RoleId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("ServerId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("Infrastructure.Server", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Background")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<ulong>("Logs")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Prefix")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<ulong>("Welcome")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("Infrastructure.Ticker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Tickers");
                });
#pragma warning restore 612, 618
        }
    }
}
